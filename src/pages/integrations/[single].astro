---
import PageHeader from "@/components/PageHeader.astro";
import Shape from "@/components/Shape.astro";
import Base from "@/layouts/Base.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { humanize, markdownify } from "@/lib/utils/textConverter";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { getEntry, render } from "astro:content";
const integrationsIndex = (await getEntry(
  "integrations",
  "-index"
)) as CollectionEntry<"integrations">;

export async function getStaticPaths() {
  const integrations = await getSinglePage("integrations");
  const paths = integrations.map((integration) => ({
    params: {
      single: integration.id,
    },
    props: { integration: integration },
  }));
  return paths;
}
const { integration } = Astro.props;

const { Content } = await render(integration);
const page_data = {
  ...integration.data,
  index_title: integrationsIndex.data.title,
  slug: integration.id,
};
---

<Base
  title={integration.data.title}
  meta_title={integration.data.meta_title}
  description={integration.data.description}
  image={integration.data.image}
>
  <Shape />
  <section class="page-hero pb-8 pt-16">
    <div class="container">
      <div class="page-hero-content mx-auto max-w-[883px] text-center">
        <PageHeader page_data={page_data} />
      </div>
    </div>
  </section>
  <section class="section career-single pt-0">
    <div class="container">
      <div class="lg:gx-4 row">
        <div class="mx-auto lg:col-8">
          <div class="lg:py-[60px] rounded-xl bg-white p-7 shadow-lg lg:px-12">
            <div class="mb-8 px-4 text-center">
              <Image
                class="mx-auto"
                src={integration.data.image!}
                alt=""
                height={80}
                width={80}
              />
              <h1 class="mt-6">{integration.data.title}</h1>
              <p
                class="mt-6"
                set:html={markdownify(integration.data.excerpt!)}
              />
              {
                integration.data.button && (
                  <a
                    class="btn btn-primary mt-8 px-10"
                    href={integration.data.button.link!}
                  >
                    {humanize(integration?.data.button.label!)}
                    {humanize(integration.data.name!)}
                  </a>
                )
              }
            </div>
            <div class="content">
              <Content />
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</Base>
